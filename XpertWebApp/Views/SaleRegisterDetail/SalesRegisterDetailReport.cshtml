
@{
    ViewBag.Title = "Sales Register Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/css/AdminLTE.min.css" rel="stylesheet" />
<style>
    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
        height: 31px;
    }

        /* .col-md-2 {
        max-width: none;
    }

    .col-md-3 {
        flex: 2 5 28% !important;
        max-width: 41% !important;
    }*/
        /* Style the buttons inside the tab */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 6px 16px;
            transition: 0.3s;
            font-size: 12px;
            font-weight: bold;
        }

            /* Change background color of buttons on hover */
            .tab button:hover {
                background-color: #ddd;
            }

            /* Create an active/current tablink class */
            .tab button.active {
                background-color: #3f6e8a;
                color: white;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        /* border: 1px solid #ccc;*/
        border-top: none;
    }

    #loadingMessage {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 20px;
        border-radius: 10px;
        z-index: 1000;
    }

    .input.error {
        border-color: red;
    }

    .dataTables_filter {
        display: none;
    }

    tfoot {
        display: table-header-group;
    }

    table {
        table-layout: auto; /* This ensures that the table's layout is fixed */
        width: 100%; /* Adjust the width as needed */
    }

    td {
        height: 8px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    table thead {
        position: sticky;
        top: 0;
        background-color: #f9f9f9;
        z-index: 1;
        table-layout: auto !important;
        width: auto !important;
    }

    /*   table thead, tfoot {
            position: sticky;
            top: 0;
            background-color: #1cc8c07a;
            z-index: 1;
            table-layout: auto !important;
            width: auto !important;
            font-size: 14px;
            font-weight: bold;
        }*/

    .custom-file-upload {
        border: 1px solid #ccc;
        display: inline-block;
        padding: 6px 12px;
        cursor: pointer;
        border-radius: 4px;
        font-size: 16px;
        background-color: #337ab7;
        color: white;
        height: 26px;
    }

        .custom-file-upload:hover {
            background-color: #e9e9e9;
        }


    label {
        padding-bottom: 0px !important;
        padding-top: 0px !important;
        font-size: 12px !important;
        display: inline;
    }

    .input {
        display: flex;
        flex: 0 1 100px;
        border: 1px solid #ccc;
        color: #0d0e0d;
        height: 28px;
       /* width: 149px;*/
        border-radius: 5px;
        padding: 6px 5px;
        border-color: #abc2db;
    }

  /*  .col-sm-2 {
        width: 14% !important;
    }*/

    .search-button {
        border-radius: 7px;
        width: 93px;
        height: 32px;
        background-color: #3f6e8a;
        color: white;
        text-align: center;
        margin-top: 20px;
    }



    /* .input-group {
            margin-bottom: -23px;
        }
    */
    .input-group-addon {
        background-color: #eee !important;
        border-color: #abc2db !important;
        width: unset !important;
    }

    label {
        font-weight: bold;
        color: black;
    }

    /*.navigater {*/
    /*font-size: 14px;
            font-weight: 400;
            line-height: 1;
            color: #555;
            text-align: center;
            background-color: #eee;*/
    /* border: 1px solid #ccc;*/
    /*border-radius: 4px;
            border-right: 0;
            white-space: nowrap;

            border-radius: 0;*/
    /*vertical-align: top;
            border-color: #d2d6de;
            background-color: #fff;
            border-right: 0;
            display: table-cell;
        }*/

    /*table {
            table-layout: auto;*/ /* This ensures that the table's layout is fixed */
    /*width: 100%;*/ /* Adjust the width as needed */
    /*}*/

    /*  td {
            height: 8px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }*/

    th {
        text-align: center;
    }
</style>

<div class="content-wrapper" style="margin-left:-8px!important;">
    <section class="content-header">
        <i>@ViewBag.Title</i>
    </section>
    <section class="content">
        <div class="box">
            <div class="row" style="margin-top: -18px; max-height: 16px;">
                <div class="col-sm-12">
                    <div class="box box-success">
                        <div class="box-header with-border" style="padding: 1px;margin-top: 14px;">
                            <div class="row" style="margin-top:-14px;">
                                <div class="col-sm-12">
                                    <div class="tab">
                                        <button class="tablinks" onclick="openTab(event,'divFilter')" id="defaultOpen">Filter</button>
                                        <button class="tablinks" onclick="openTab(event,'requsetStatus')">Report</button>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="box-body-wrapper" style="margin-top: -12px;">
            <div class="tabcontent" id="divFilter">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="box">
                            <div class="box box-body">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <fieldset class="form-group" style="border: 1px solid #b4c7e7; border-radius: 5px; padding: 4px;">
                                                    <legend style="font-weight: bold; padding: 0 10px; font-size: 12px; width: fit-content;">Date Range</legend>
                                                    <div class="row">
                                                        <div class="col-sm-4" style="max-width:170px;margin-top:-15px;">
                                                            <div class="form-group">
                                                                <label>From Date</label>
                                                                <input type="date" class="form-control form-control-sm input" id="txtFromDate" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4" style="max-width: 165px; margin-top: -15px;">
                                                            <div class="form-group">
                                                                <label>To Date</label>
                                                                <input type="date" class="form-control form-control-sm input" id="txtToDate" />

                                                            </div>
                                                        </div>

                                                    </div>
                                                </fieldset>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <fieldset class="form-group" style="border: 1px solid #b4c7e7; border-radius: 5px; padding: 4px;">
                                                    <legend style="font-weight: bold; padding: 0 10px; font-size: 12px; width: fit-content;">Category</legend>
                                                    <div class="row">
                                                        <div class="col-sm-12 text-center ">
                                                            <div class="form-group">
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="radio" name="select" id="rbtAll" style=" margin-left: 2px;" checked>
                                                                    <label class="form-check-label" for="rbtDetail" style="margin-left: 20px;">All</label>
                                                                    <input class="form-check-input" type="radio" name="select" id="rbtSelect" style=" margin-left: 7px;">
                                                                    <label style=" margin-left: 24px;">Select</label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <div class="table-responsive" style="max-height:400px; overflow-y: auto;">
                                                                <table class="table table-bordered table-hover no-footer dataTable" style="font-size: 12px;" width="100%" id="tblCategoryLevel">
                                                                    <thead style="font-weight: bold; color: black;">
                                                                        <tr>
                                                                            <th></th>
                                                                            <th>Code</th>
                                                                            <th>Description</th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        

                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                           
                                                        </div>
                                                    </div>
                                                </fieldset>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row">
                                            <div class="col-sm-12 text-center" style="margin-top: 34px;">
                                                <div class="form-group">
                                                    <div class="form-check">
                                                        <input type="checkbox" class="form-check-input" id="chkQuickLoad" checked="checked">
                                                        <label class="form-check-label" for="chkQuickLoad">Quick Load</label>

                                                        <input type="checkbox" class="form-check-input" id="chkBatchWise" style="margin-left: 20px;">
                                                        <label class="form-check-label" for="chkBatchWise" style="margin-left:43px;">Batch Wise</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-28px;">
                                            <div class="col-sm-10">
                                                <div class="form-group">
                                                    <label>UOM</label>
                                                    <div class="input-group">
                                                        <input type="text" class="form-control form-control-sm input" id="txtFndUOM" />
                                                        <button class="btn btn-primary btn-sm" type="button" id="btnfndUOM" style="margin-top:-2px;"><i class="fa fa-search"></i></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-10">
                                                <div class="form-group">
                                                    <label>Route Type</label>
                                                    <select class="form-control form-control-sm" id="ddlRouteType">
                                                        <option></option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Transation</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtTransaction">
                                                        <div class="input-group-append">
                                                            <button id="btnloadTransation" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>State</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtState">
                                                        <div class="input-group-append">
                                                            <button id="btnloadState" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Location</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtLocation">
                                                        <div class="input-group-append">
                                                            <button id="btnloadLocation" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Item Group</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtItemGroup">
                                                        <div class="input-group-append">
                                                            <button id="btnloadItemGroup" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Item </label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtItem">
                                                        <div class="input-group-append">
                                                            <button id="btnloadItem" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Customer Group </label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtCustomerGroup">
                                                        <div class="input-group-append">
                                                            <button id="btnloadCustomerGroup" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Customer</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtCustomer">
                                                        <div class="input-group-append">
                                                            <button id="btnloadCustomer" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Route</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtRoute">
                                                        <div class="input-group-append">
                                                            <button id="btnloadRoute" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Scheme Type</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtSchemeType">
                                                        <div class="input-group-append">
                                                            <button id="btnloadSchemeType" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Customer Category</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtCustomerCategory">
                                                        <div class="input-group-append">
                                                            <button id="btnloadCustomerCategory" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>Zone</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtZone">
                                                        <div class="input-group-append">
                                                            <button id="btnloadZone" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>RSM</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtRSM">
                                                        <div class="input-group-append">
                                                            <button id="btnloadRSM" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>ASM</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtASM">
                                                        <div class="input-group-append">
                                                            <button id="btnloadASM" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-top:-17px;">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label>ASO</label>
                                                    <div class="input-group" id="divtxtRoute">
                                                        <input type="text" class="form-control form-control-sm input" id="txtASO">
                                                        <div class="input-group-append">
                                                            <button id="btnloadASO" class="btn btn-sm btn-primary">
                                                                <img src="/Content/img/notebook_1289549.png" style="height: 19px;" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="tabcontent" id="requsetStatus">
                <div class="table-responsive" style="max-height:400px; overflow-y: auto;">
                    <table width="100%" class="table table-bordered table-hover no-footer dataTable" style="font-size: 12px;" id="tblRequestStatus">
                        <thead id="theadRequestStatus">
                        </thead>
                        <tbody id="tbodyRequestStatus"></tbody>
                    </table>
                </div>
                <div style="overflow-y: auto; text-align: right; height:52px; margin-top:4px;">
                    <nav aria-label="Page navigation example" style="display: inline-flex!important;">
                        <ul class="pagination justify-content-center" id="pagination">
                        </ul>
                    </nav>
                    @*</div>*@
                </div>
            </div>

        </div>
        <div class="box-footer" style="margin-top:61px;">
            <input type="button" class="btn btn-sm btn-primary search-button" value="Search" id="btnSearch" />
            <input type="button" class="btn btn-sm btn-primary search-button" value="Reset" id="btnReset" />
            <button class="btn btn-sm btn-primary search-button" style="width: 130px!important;" id="btnPdf"> <i class="fa fa-download"></i> Generate PDF</button>
            <button class="btn btn-sm btn-primary search-button" style="width: 139px!important;" id="btnExcel"> <i class="fa fa-download"></i> Generate Excel</button>

        </div>

        @*</div>*@
        @*</div>*@

    </section>
</div>
@Html.Partial("~/Views/Report/_MultipleSelectionPartialView.cshtml")
@Html.Partial("~/Views/Report/_SingleSelectionPartialView.cshtml")

<script src="~/Scripts/adminlte/components/jquery/dist/jquery.min.js"></script>
<script src="~/Scripts/adminlte/components/jquery-ui/jquery-ui.min.js"></script>
<script src="~/Content/vendor/bootstrap/js/bootstrap.min.js"></script>
<script src="~/Scripts/adminlte/js/adminlte.min.js"></script>
<script src="~/Scripts/CommonDateFormate.js"></script>
<script>
    $(document).ready(function () {
        openTab(null, 'divFilter');
        $("#txtToDate").val(formattedToday);
        $("#txtFromDate").val(formattedFromDate);
        BindCategoryLevel();
        BindReportTypeDropdown();
        $('#tblCategoryLevel tbody').find('input, select, textarea, button').attr('disabled', true);

        //LoadPaymentProcess();
    });


    function openTab(evt, tabId) {
        // Hide all tab content
        $(".tabcontent").hide();

        // Remove "active" class from all tab links
        $(".tablinks").removeClass("active");

        // Show the current tab content and add "active" class to the clicked tab button
        $("#" + tabId).show();
        if (evt) {
            $(evt.currentTarget).addClass("active");
        }
    }


     function BindReportTypeDropdown(){
         $.ajax({
                url: '@Url.Action("GetReportType", "SaleRegisterDetail")',
                type: 'GET',
                dataType: 'json',
             success: function (data) {
                 console.log(data.items);
                 var $dropdown = $('#ddlRouteType');
                    $dropdown.empty();
                 $.each(data.items, function(index, item) {
                        $dropdown.append($('<option></option>').attr('value', item.Value).text(item.Text));
                    });
                },
                error: function(xhr, status, error) {
                    console.error("An error occurred: " + error);
                }
            });
    }

    function GetMasterData(methodName, callback) {
        $.ajax({
            url: '/Common/GetMasterData',
            type: 'POST',
            dataType: "json",
            async: false,
            data: { methodName: methodName },
            success: function (reponse) {
                if (reponse.lst) {
                    var responseData = JSON.parse(reponse.lst);
                    callback(responseData);
                }
                else {
                    ShowSweet2Message("warning", "Warning", reponse.responseText);
                }

            },
            error: function (errorMessage) {
                ShowSweet2Message("warning", "Warning", errorMessage.responseText);
            }
        })
    }

    $("#btnfndUOM").on('click', function () {
        var methodName = "GetUOM"
        var modalId = "AddModal";
        var title = "Select";
        //var header = ['CODE', 'Name'];
       // $("#modalCreate").data('source', 'uom');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var header = Object.keys(data[0]).filter(function (key) {
                    return key !== "Result";
                });

                var processedData = data.map(function (row) {
                    var newRow = {};
                    header.forEach(function (key) {
                        newRow[key] = row[key];
                    });
                    return newRow;
                });
                AddDataModal(modalId, title, header, processedData, function (onAnchorClick) {

                    console.log("Selected values:", onAnchorClick);

                    $("#txtFndUOM").val(onAnchorClick[0]);


                });
            } else {
                console.error("Data is undefined or not an array:", data);
            }
            disable();
        })
    })


    $("#btnloadTransation").on('click', function () {
        var DocFinder = $("#chkBatchWise").is(":checked");
        //var methodName = "GetCustomer"
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'transation');
        GetTransaction(DocFinder, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }
            disable();
        })
    })

    function GetTransaction(DocFinder, callback) {
        $.ajax({
            url: '/Common/GetAllSaleTransactionType',
            type: 'POST',
            dataType: "json",
            async: false,
            data: { DocFinder: DocFinder },
            success: function (reponse) {
                if (reponse.lst) {
                    var responseData = JSON.parse(reponse.lst);
                    callback(responseData);
                }
                else {
                    ShowSweet2Message("warning", "Warning", reponse.responseText);
                }

            },
            error: function (errorMessage) {
                ShowSweet2Message("warning", "Warning", errorMessage.responseText);
            }
        })
    }



    function GetLocationBYSate(state, callback) {
        $.ajax({
            url: '/Common/GetLocationByState',
            type: 'POST',
            dataType: "json",
            async: false,
            data: { state: state },
            success: function (reponse) {
                if (reponse.lst) {
                    var responseData = JSON.parse(reponse.lst);
                    callback(responseData);
                }
                else {
                    ShowSweet2Message("warning", "Warning", reponse.responseText);
                }

            },
            error: function (errorMessage) {
                ShowSweet2Message("warning", "Warning", errorMessage.responseText);
            }
        })
    }


    $("#btnloadState").on('click', function () {
        var methodName = "GetState"
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'state');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })

    $("#btnloadLocation").on('click', function () {
        var state = $("#txtState").val();
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'location');
        GetLocationBYSate(state, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })


    function GetItemGroup(callback) {
        $.ajax({
            url: '/SaleRegisterDetail/ItemGroup',
            type: 'POST',
            dataType: "json",
            async: false,
            //data: { state: state },
            success: function (reponse) {
                if (reponse.lst) {
                    var responseData = JSON.parse(reponse.lst);
                    callback(responseData);
                }
                else {
                    ShowSweet2Message("warning", "Warning", reponse.responseText);
                }

            },
            error: function (errorMessage) {
                ShowSweet2Message("warning", "Warning", errorMessage.responseText);
            }
        })
    }

    $("#btnloadItemGroup").on('click', function () {
       // var state = $("#txtState").val();
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'itemGroup');
        GetItemGroup(function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })


    $("#btnloadItem").on('click', function () {
        var methodName ='GetItem';
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'item');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })


    $("#btnloadCustomerGroup").on('click', function () {
        var methodName = 'GetCustomerGroup';
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'customerGroup');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })


    $("#btnloadCustomer").on('click', function () {
        var methodName = 'GetCustomer';
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'customer');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })


    $("#btnloadRoute").on('click', function () {
        var methodName = 'GetRoute';
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'route');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })
    $("#btnloadSchemeType").on('click', function () {
        var methodName = 'GetSchemeType';
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'schemeType');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })


    $("#btnloadCustomerCategory").on('click', function () {
        var methodName = 'GetCustomerCategory';
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'customertCategory');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })


    $("#btnloadRSM").on('click', function () {
        var methodName = 'GetRSM';
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'rsm');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })

    $("#btnloadASM").on('click', function () {
        var methodName = 'GetASM';
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'asm');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })

    $("#btnloadASO").on('click', function () {
        var methodName = 'GetASO';
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'aso');
        GetMasterData(methodName, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })


    $("#btnloadZone").on('click', function () {
        var customer = $("#txtCustomer").val();
        var modalId = "modalCreate";
        var title = "Select";
        var header = ['', 'CODE', 'Name'];
        $("#modalCreate").data('source', 'zone');
        GetZone(customer, function (data) {
            if (data && Array.isArray(data)) {
                var filteredData = data.map(function (row) {
                    return {
                        'CODE': row.Code,
                        'Name': row.Name
                    }
                });
                AddMasterData(modalId, header, title, filteredData);
                console.log("datat", filteredData);
            } else {
                console.error("Data is undefined or not an array:", data);
            }

            disable();
        })
    })


    function GetZone(customer, callback) {
        $.ajax({
            url: '/SaleRegisterDetail/GetZOneByCustomer',
            type: 'POST',
            dataType: "json",
            async: false,
            data: { customer: customer },
            success: function (reponse) {
                if (reponse.lst) {
                    var responseData = JSON.parse(reponse.lst);
                    callback(responseData);
                }
                else {
                    ShowSweet2Message("warning", "Warning", reponse.responseText);
                }

            },
            error: function (errorMessage) {
                ShowSweet2Message("warning", "Warning", errorMessage.responseText);
            }
        })
    }


    $("#btnSave").on('click', function () {
        var source = $("#modalCreate").data('source');
        if (source === 'transation') {
            $("#txtTransaction").val(AddMultipleValueInTextBox());
        }
        else if (source === 'state') {
            $("#txtState").val(AddMultipleValueInTextBox());
        }
        else if (source === 'location') {
            $("#txtLocation").val(AddMultipleValueInTextBox());
        }
        else if (source === 'itemGroup') {
            $("#txtItemGroup").val(AddMultipleValueInTextBox());
        }
        else if (source === 'item') {
            $("#txtItem").val(AddMultipleValueInTextBox());
        }
        else if (source === 'customerGroup') {
            $("#txtCustomerGroup").val(AddMultipleValueInTextBox());
        }
        else if (source === 'customer') {
            $("#txtCustomer").val(AddMultipleValueInTextBox());
        }
        else if (source === 'route') {
            $("#txtRoute").val(AddMultipleValueInTextBox());
        }
        else if (source === 'schemeType') {
            $("#txtSchemeType").val(AddMultipleValueInTextBox());
        }
        else if (source === 'customertCategory') {
            $("#txtCustomerCategory").val(AddMultipleValueInTextBox());
        }
        else if (source === 'rsm') {
            $("#txtRSM").val(AddMultipleValueInTextBox());
        }

        else if (source === 'asm') {
            $("#txtASM").val(AddMultipleValueInTextBox());
        }
        else if (source === 'aso') {
            $("#txtASO").val(AddMultipleValueInTextBox());
        }
        else if (source === 'zone') {
            $("#txtZone").val(AddMultipleValueInTextBox());
        }
        $("#modalCreate").modal('hide');
    })


    function AddMultipleValueInTextBox() {
        var lst = [];
        $("#tbodyMCCCode>tr").each(function (rowIndex, row) {
            if ($(row).find('td:eq(0) input[type="checkbox"]').prop("checked")) {
                var item = $(row).find('td:eq(1)').text();
                lst.push(item)

            }

        })
        if (lst.length <= 0) {
            lst.push("All");
        }
        else {
            lst.join(", ");
        }
        console.log('list', lst);
        return lst;
    }


    function BindCategoryLevel() {
        $.ajax({
            url: '/SaleRegisterDetail/GetCategoryLevel',
            type: 'POST',
            dataType: "json",
            async: false,
            success: function (reponse) {
                if (reponse.responseData) {

                    var responseData = JSON.parse(reponse.responseData);
                    console.log("category", responseData )
                    var tbody = '';
                    $.each(responseData, function (index, item) {
                        tbody += '<tr>';                       
                        tbody += '<td><input type="checkbox" class="row-checkbox"></td>';
                        tbody += '<td>' + item.Code + '</td>';
                        tbody += '<td>' + item.NAME + '</td>';
                        tbody += '</tr>';
                    })
                    $('#tblCategoryLevel tbody').html(tbody);
                }
                else {
                    ShowSweet2Message("warning", "Warning", reponse.responseText);
                }

            },
            error: function (errorMessage) {
                ShowSweet2Message("warning", "Warning", errorMessage.responseText);
            }
        })
    }
    $("input[name='select']").click(function () {
        if ($("#rbtAll").is(":checked")) {
            $('#tblCategoryLevel tbody').find('input, select, textarea, button').attr('disabled', true);
            $("#tblCategoryLevel tbody input[type='checkbox']").prop("checked", false);
        }
        else  {
            $('#tblCategoryLevel tbody').find('input, select, textarea, button').attr('disabled', false);
        }
    })

    var allData = []; // Array to hold all data
    var pageSize = 1000; // Number of records per page
    var currentPage = 1; // Current page
    var totalPages = 0; // Total number of pages
    $("#btnSearch").on('click', function () {
        openTab(null, 'requsetStatus');
        var fromDate = $("#txtFromDate").val();
        var toDate = $("#txtToDate").val();
        var chkQuickLoad = $("#chkQuickLoad").is(":checked");
        var chkBatchWise = $("#chkBatchWise").is(":checked");
        var select = $("#rbtSelect").is(":checked");
        var uom = $("#txtFndUOM").val();
        var reportType = $("#ddlRouteType").val();
        var transation = $("#txtTransaction").val();
        var state = $("#txtState").val();
        var location = $("#txtLocation").val();
        var itemGroup = $("#txtItemGroup").val();
        var item = $("#txtItem").val();
        var customerGroup = $("#txtCustomerGroup").val();
        var customer = $("#txtCustomer").val();
        var route = $("#txtRoute").val();
        var schemeType = $("#txtSchemeType").val();
        var customerCategory = $("#txtCustomerCategory").val();
        var zone = $("#txtZone").val();
        var rsm = $("#txtRSM").val();
        var asm = $("#txtASM").val();
        var asp = $("#txtASO").val();
        var category = AddMultipleCategory();
        $('#callaway_popup2').show();
        $.ajax({
            url: '/SaleRegisterDetail/GetSalesRegisterDetail',
            type: 'GET',
            dataType: 'json',
            data: {
                fromDate: fromDate,
                ToDate: toDate,
                ddlReportType: reportType,
                txtUOM: uom,
                txtItem: item,
                txtTransaction: transation,
                txtState: state,
                txtLocation: location,
                txtCustomer: customer,
                txtItemGroup: itemGroup,
                txtCustGroup: customerGroup,
                txtRoute: route,
                txtmultSchemeType: schemeType,
                TxtMultiZone: zone,
                TxtMultiASM: asm,
                TxtMultiRSM: rsm,
                TxtMultiASO: asp,
                TxtMultiCustomerCategory: customerCategory,
                Document_No:"",
                rbtnCategorySelect: select,
                category: category,
                btnPosted: true,
                btnUnposted: false,
                chk_stockingunit: false,
                chkIncludeDebitCredit: false,
                chkQuickLoad: chkQuickLoad,
                chkBatchWise: chkBatchWise,
                itemStructure:"ITEM-STRUCT"
            },
            success: function (data) {
                if (data.success) {
                    $('#callaway_popup2').hide();
                    var responseData = JSON.parse(data.responseData);
                    console.log("Response Data", responseData);

                    if (responseData) {
                        $('#divFilter').find('input, select, button').attr('disabled', true);
                        allData = responseData;
                        console.log("Data", allData);
                        totalPages = Math.ceil(allData.length / pageSize);

                        GetData(currentPage);
                        renderPagination();
                        $('#callaway_popup2').hide();
                        $('#tblRequestStatus').DataTable({
                            'paging': false,
                            'lengthChange': true,
                            'searching': true,
                            'ordering': true,
                            'info': false,
                            'autoWidth': false,
                            'initComplete': function () {
                                var table = this.api();

                                // Add a text input to each header cell below the header text
                                $('#tblRequestStatus thead th').each(function () {
                                    var title = $(this).text();
                                    $(this).html(title + '<br><input type="text" placeholder="Search ' + title + '" />');
                                });

                                // Apply the search
                                table.columns().every(function () {
                                    var column = this;

                                    $('input', column.header()).on('keyup change', function () {
                                        if (column.search() !== this.value) {
                                            column
                                                .search(this.value)
                                                .draw();
                                        }
                                    });
                                });
                            }
                        });
                    }
                    else {
                        ShowSweet2Message("warning", "Warning", data.responseText);

                    }
                }
                else {
                    ShowSweet2Message("warning", "Warning", data.responseText);
                    $('#callaway_popup2').hide();
                }
            },
            error: function (errorMessage) {
                alert(errorMessage.responseText);
                $('#callaway_popup2').hide();
            },
            error: function (errorMessage) {
                alert(errorMessage.responseText);
                $('#callaway_popup2').hide();
            }

        })
    })

    function GetData(page) {
        var start = (page - 1) * pageSize;
        var end = start + pageSize;
        var pagedData = allData.slice(start, end);
        if ($.fn.DataTable.isDataTable('#tblRequestStatus')) {
            $('#tblRequestStatus').DataTable().clear().destroy();
        }
        $('#tblRequestStatus thead').empty();
        $('#tblRequestStatus tbody').empty();
        var columns = Object.keys(pagedData[0]).filter(function (key) {
            return key !== "Result";
        });
        var theadRow = '<tr>';
        $.each(columns, function (index, column) {
            theadRow += '<th>' + column + '</th>';
        });
        theadRow += '</tr>';
        $('#theadRequestStatus').append(theadRow);

        // Create table rows
        $.each(pagedData, function (index, item) {
            var row = '<tr>';
            $.each(columns, function (index, column) {
                row += '<td>' + (item[column] !== null ? item[column] : '') + '</td>';
            });
            row += '</tr>';
            $('#tbodyRequestStatus').append(row);
        });

    }


    function renderPagination() {
        var paginationHtml = '';

        paginationHtml += '<li class="page-item ' + (currentPage === 1 ? 'disabled' : '') + '">';
        paginationHtml += '<a class="page-link" href="#" aria-label="Previous" onclick="changePage(' + (currentPage - 1) + ')">';
        paginationHtml += '<span aria-hidden="true">&laquo;</span>';
        paginationHtml += '</a>';
        paginationHtml += '</li>';

        for (var i = 1; i <= totalPages; i++) {
            paginationHtml += '<li class="page-item ' + (i === currentPage ? 'active' : '') + '">';
            paginationHtml += '<a class="page-link" href="#" onclick="changePage(' + i + ')">' + i + '</a>';
            paginationHtml += '</li>';
        }

        paginationHtml += '<li class="page-item ' + (currentPage === totalPages ? 'disabled' : '') + '">';
        paginationHtml += '<a class="page-link" href="#" aria-label="Next" onclick="changePage(' + (currentPage + 1) + ')">';
        paginationHtml += '<span aria-hidden="true">&raquo;</span>';
        paginationHtml += '</a>';
        paginationHtml += '</li>';
        $('#pagination').html(paginationHtml);
    }
    function changePage(page) {
        if (page < 1 || page > totalPages || page === currentPage) return;
        currentPage = page;

        GetData(currentPage);

        /* SetTableFormationOFDock(page);*/
    }


    $(document).on('click', '.page-btn', function () {
        var page = $(this).data('page');
        currentPage = page;
        GetData(page);
    });

    function AddMultipleCategory() {
        var lst = [];
        $("#tblCategoryLevel tbody>tr").each(function (rowIndex, row) {
            if ($(row).find('td:eq(0) input[type="checkbox"]').prop("checked")) {
                var item = $(row).find('td:eq(1)').text();
                lst.push(item);

            }
        })
        console.log("length", lst.length);
        var result = lst.length > 0 ? lst.join(", ") : "";

        console.log('Comma-separated list:', result); // For debug purposes

        return result;
    }
</script>

